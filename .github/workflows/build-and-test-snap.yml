name: Snap Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, chardev ]
  # Allow manual trigger
  workflow_dispatch:

jobs:
  build-arm64:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: 
          - arm64
    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ matrix.platform }}

      - name: Build snap for arm64
        uses: diddlesnaps/snapcraft-multiarch-action@v1
        id: build
        with:
          architecture: ${{ matrix.platform }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: matter-pi-gpio-commander_${{ github.run_number}}_${{ matrix.platform }}.snap
          path: ${{ steps.build.outputs.snap }}

  build-amd64:
    outputs:
      snap: ${{ steps.snapcraft.outputs.snap }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - amd64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Snap
        uses: snapcore/action-build@v1
        id: snapcraft

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: matter-pi-gpio-commander_${{ github.run_number}}_${{ matrix.platform }}.snap
          path: ${{ steps.snapcraft.outputs.snap }}
          if-no-files-found: error

  test-amd64:
    needs: build-amd64
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - amd64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: matter-pi-gpio-commander_${{ github.run_number}}_${{ matrix.platform }}.snap
          path: .

      - name: Make gpio-mock.sh executable
        run: chmod +x tests/gpio-mock.sh

      - name: Run gpio-mock.sh
        run: tests/gpio-mock.sh

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.*'
          cache: false

      # - name: Run tests
      #   shell: bash
      #   working-directory: tests
      #   env:
      #     SKIP_TEARDOWN_REMOVAL: true
      #     LOCAL_SERVICE_SNAP: ../${{ needs.build.outputs.snap }}
      #   run: |
      #     go test -failfast -p 1 -timeout 30m -v

      # - name: Upload snap logs
      #   if: always()
      #   uses: actions:upload-artifact@v4
      #   with:
      #     name: snap-logs
      #     path: tests/*.log

      - name: Setup Upterm session
        uses: lhotari/action-upterm@v1
        with:
          wait-timeout-minutes: 10
