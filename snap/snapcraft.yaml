name: matter-pi-gpio-commander
version: "0.2"
summary: Raspberry Pi GPIO as a Matter lighting app
description: Refer to https://snapcraft.io/matter-pi-gpio-commander

grade: devel
confinement: strict

base: core22
architectures:
  - build-on: arm64
  - build-on: armhf
  # - build-on: amd64

layout:
  /mnt:
    bind: $SNAP_COMMON/mnt

parts:
  wiring-pi:
    plugin: nil
    source: https://github.com/WiringPi/WiringPi.git
    source-depth: 1
    source-tag: 2.61-1
    override-build: |
      WIRINGPI_SUDO="" ./build

      mkdir -p $CRAFT_PART_INSTALL/lib
      cp -v /usr/local/lib/libwiringPi.so* $CRAFT_PART_INSTALL/lib/
    build-packages: [git, gcc, g++]

  test-blink:
    after: [wiring-pi]
    plugin: nil
    source: .
    override-build: |
      g++ -Wall test-blink.cpp -lwiringPi
      mkdir -p $CRAFT_PART_INSTALL/bin
      cp test-blink $CRAFT_PART_INSTALL/bin/
  
  connectedhomeip:
    plugin: nil
    source: https://github.com/project-chip/connectedhomeip.git
    source-depth: 1
    source-tag: v1.0.0.2
    source-submodules: []
    override-pull: |
      craftctl default
      # shallow clone the submodules
      scripts/checkout_submodules.py --shallow --platform linux

  lighting:
    after: [wiring-pi, connectedhomeip]
    plugin: nil
    source: app
    override-build: |
      cd ../../connectedhomeip/src

      # Replace storage paths:
      sed -i 's/\/tmp/\/mnt/g' src/platform/Linux/CHIPLinuxStorage.h
      # Replace key-value store path:
      sed -i 's/\/tmp/\/mnt/g' src/platform/Linux/CHIPPlatformConfig.h

      # To avoid unrelated activation errors, don't treat unset variables as error
      set +u
      source scripts/activate.sh
      set -u
      
      cd examples/lighting-app/linux/

      # Copy and replace the application files
      cp -vr $CRAFT_PART_BUILD/* .

      gn gen out/build
      ninja -C out/build

      ldd out/build/chip-lighting-app
      
      mkdir -p $CRAFT_PART_INSTALL/bin
      cp out/build/chip-lighting-app $CRAFT_PART_INSTALL/bin/lighting-app        
    build-packages:
      - git
      - gcc
      - g++
      - pkg-config
      - libssl-dev
      - libdbus-1-dev
      - libglib2.0-dev
      - libavahi-client-dev
      - ninja-build
      - python3-venv
      - python3-dev
      - python3-pip
      - unzip
      - libgirepository1.0-dev
      - libcairo2-dev
      - libreadline-dev
      - generate-ninja

  local-bin:
    plugin: nil
    source: snap/local/bin/
    override-build: |
      mkdir -p $CRAFT_PART_INSTALL/bin
      cp -v run.sh $CRAFT_PART_INSTALL/bin/
      cp -v load-snap-options.sh $CRAFT_PART_INSTALL/bin/

apps:
  lighting:
    daemon: simple
    command-chain:
      - bin/load-snap-options.sh
    command: bin/run.sh
    install-mode: disable
    restart-delay: 10s
    plugs:
      - network
      - network-bind
      - bluez
      - avahi-control
      - gpio
  
  # This app is to test the GPIO control without using a Matter controller
  test-blink:
    command-chain:
      - bin/load-snap-options.sh
    command: bin/test-blink
    plugs:
      - gpio
