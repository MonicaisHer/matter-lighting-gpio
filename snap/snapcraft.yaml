name: matter-pi-gpio-commander
version: "0.1"
summary: Matter Raspberry Pi GPIO output commander
description: |
  TBA
license: Apache-2.0
confinement: strict
base: core22
grade: devel

architectures:
  - build-on: arm64
  - build-on: armhf

layout:
  /mnt:
    bind: $SNAP_DATA/mnt

parts:
  build-res:
    plugin: dump
    source: build
    override-build: |
      cp requirements.txt $CRAFT_STAGE/
  connectedhomeip:
    after: [build-res]
    plugin: nil
    override-build: |   
      git clone https://github.com/project-chip/connectedhomeip.git --depth=1 .
      scripts/checkout_submodules.py --shallow --platform linux

      # The project writes its data to /tmp. Snap does not allow bind mounting
      #   a persistent directory on /tmp, so we need to replace it in the code.
      # Replace all /tmp directories with /mnt:
      sed -i 's/\/tmp/\/mnt/g' src/platform/Linux/CHIPLinuxStorage.h
      sed -i 's/\/tmp/\/mnt/g' src/platform/Linux/CHIPPlatformConfig.h

      set +u # do not treat unset variables as error
      # Setup the compilation environment
      source scripts/activate.sh

      # Python setup
      ./scripts/build_python_device.sh --chip_detail_logging true
      source out/python_env/bin/activate

      # This is needed for the gpio. Install it here since the venv is active.
      pip install -r $CRAFT_STAGE/requirements.txt

      sed 's/^VIRTUAL_ENV=.*/VIRTUAL_ENV="\$SNAP\/connectedhomeip\/python_env"/' \
        out/python_env/bin/activate > out/python_env/bin/activate_snap

      mkdir -p $CRAFT_PART_INSTALL/connectedhomeip
      cp -r out/python_env $CRAFT_PART_INSTALL/connectedhomeip/
    build-packages:
      - git
      - gcc
      - g++
      - pkg-config
      - libssl-dev
      - libdbus-1-dev
      - libglib2.0-dev
      - libavahi-client-dev
      - ninja-build
      - python3-venv
      - python3-dev
      - python3-pip
      - unzip
      - libgirepository1.0-dev
      - libcairo2-dev
      - libreadline-dev
      - generate-ninja

  lighting:
    after: [connectedhomeip]
    plugin: dump
    source: .
    override-build: |
      mkdir -p $CRAFT_PART_INSTALL/bin $CRAFT_PART_INSTALL/etc
      cp run.sh $CRAFT_PART_INSTALL/bin/
      cp lighting.py $CRAFT_PART_INSTALL/bin/
      
    stage-packages:
      - python3
      - python3-venv

apps:
  lighting:
    daemon: simple
    install-mode: disable
    restart-delay: 10s
    command: bin/run.sh
    plugs:
      - network
      - network-bind
      - bluez
      - avahi-control
      - gpio # not connected automatically
